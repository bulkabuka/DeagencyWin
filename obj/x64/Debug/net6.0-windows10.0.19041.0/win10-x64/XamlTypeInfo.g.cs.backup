//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace DeagencyWin
{
    public partial class App : global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        private global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMetaDataProvider __appProvider;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMetaDataProvider _AppProvider
        {
            get
            {
                if (__appProvider == null)
                {
                    __appProvider = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMetaDataProvider();
                }
                return __appProvider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return _AppProvider.GetXamlType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return _AppProvider.GetXamlType(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return _AppProvider.GetXmlnsDefinitions();
        }
    }
}

namespace DeagencyWin.DeagencyWin_XamlTypeInfo
{
    /// <summary>
    /// Main class for providing metadata for the app or library
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class XamlMetaDataProvider : global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlTypeInfoProvider _provider = null;

        private global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlTypeInfoProvider Provider
        {
            get
            {
                if (_provider == null)
                {
                    _provider = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlTypeInfoProvider();
                }
                return _provider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        [global::Windows.Foundation.Metadata.DefaultOverload]
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return Provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return Provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Microsoft.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType;
            lock (_xamlTypeCacheByType) 
            { 
                if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
                {
                    return xamlType;
                }
                int typeIndex = LookupTypeIndexByType(type);
                if(typeIndex != -1)
                {
                    xamlType = CreateXamlType(typeIndex);
                }
                var userXamlType = xamlType as global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType;
                if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
                {
                    global::Microsoft.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                    if (libXamlType != null)
                    {
                        if(libXamlType.IsConstructible || xamlType == null)
                        {
                            xamlType = libXamlType;
                        }
                    }
                }
                if (xamlType != null)
                {
                    _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                    _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
                }
            }
            return xamlType;
        }

        public global::Microsoft.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType;
            lock (_xamlTypeCacheByType)
            {
                if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
                {
                    return xamlType;
                }
                int typeIndex = LookupTypeIndexByName(typeName);
                if(typeIndex != -1)
                {
                    xamlType = CreateXamlType(typeIndex);
                }
                var userXamlType = xamlType as global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType;
                if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
                {
                    global::Microsoft.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                    if (libXamlType != null)
                    {
                        if(libXamlType.IsConstructible || xamlType == null)
                        {
                            xamlType = libXamlType;
                        }
                    }
                }
                if (xamlType != null)
                {
                    _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                    _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
                }
            }
            return xamlType;
        }

        public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Microsoft.UI.Xaml.Markup.IXamlMember xamlMember;
            lock (_xamlMembers)
            {
                if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
                {
                    return xamlMember;
                }
                xamlMember = CreateXamlMember(longMemberName);
                if (xamlMember != null)
                {
                    _xamlMembers.Add(longMemberName, xamlMember);
                }
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Microsoft.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Microsoft.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Microsoft.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[36];
            _typeNameTable[0] = "Microsoft.UI.Xaml.Controls.XamlControlsResources";
            _typeNameTable[1] = "Microsoft.UI.Xaml.ResourceDictionary";
            _typeNameTable[2] = "Object";
            _typeNameTable[3] = "Boolean";
            _typeNameTable[4] = "CommunityToolkit.WinUI.UI.Controls.DataGrid";
            _typeNameTable[5] = "Microsoft.UI.Xaml.Controls.Control";
            _typeNameTable[6] = "Microsoft.UI.Xaml.Media.Brush";
            _typeNameTable[7] = "Microsoft.UI.Xaml.Style";
            _typeNameTable[8] = "CommunityToolkit.WinUI.UI.Controls.DataGridClipboardCopyMode";
            _typeNameTable[9] = "System.Enum";
            _typeNameTable[10] = "System.ValueType";
            _typeNameTable[11] = "Double";
            _typeNameTable[12] = "CommunityToolkit.WinUI.UI.Controls.DataGridLength";
            _typeNameTable[13] = "Int32";
            _typeNameTable[14] = "CommunityToolkit.WinUI.UI.Controls.DataGridGridLinesVisibility";
            _typeNameTable[15] = "CommunityToolkit.WinUI.UI.Controls.DataGridHeadersVisibility";
            _typeNameTable[16] = "Microsoft.UI.Xaml.Controls.ScrollBarVisibility";
            _typeNameTable[17] = "Microsoft.UI.Xaml.Controls.IncrementalLoadingTrigger";
            _typeNameTable[18] = "System.Collections.IEnumerable";
            _typeNameTable[19] = "Microsoft.UI.Xaml.DataTemplate";
            _typeNameTable[20] = "CommunityToolkit.WinUI.UI.Controls.DataGridRowDetailsVisibilityMode";
            _typeNameTable[21] = "CommunityToolkit.WinUI.UI.Controls.DataGridSelectionMode";
            _typeNameTable[22] = "System.Collections.ObjectModel.ObservableCollection`1<CommunityToolkit.WinUI.UI.Controls.DataGridColumn>";
            _typeNameTable[23] = "System.Collections.ObjectModel.Collection`1<CommunityToolkit.WinUI.UI.Controls.DataGridColumn>";
            _typeNameTable[24] = "CommunityToolkit.WinUI.UI.Controls.DataGridColumn";
            _typeNameTable[25] = "Microsoft.UI.Xaml.DependencyObject";
            _typeNameTable[26] = "Microsoft.UI.Xaml.Data.Binding";
            _typeNameTable[27] = "System.Nullable`1<CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection>";
            _typeNameTable[28] = "CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection";
            _typeNameTable[29] = "Microsoft.UI.Xaml.Visibility";
            _typeNameTable[30] = "String";
            _typeNameTable[31] = "System.Collections.ObjectModel.ObservableCollection`1<Microsoft.UI.Xaml.Style>";
            _typeNameTable[32] = "System.Collections.ObjectModel.Collection`1<Microsoft.UI.Xaml.Style>";
            _typeNameTable[33] = "System.Collections.IList";
            _typeNameTable[34] = "DeagencyWin.MainWindow";
            _typeNameTable[35] = "Microsoft.UI.Xaml.Window";

            _typeTable = new global::System.Type[36];
            _typeTable[0] = typeof(global::Microsoft.UI.Xaml.Controls.XamlControlsResources);
            _typeTable[1] = typeof(global::Microsoft.UI.Xaml.ResourceDictionary);
            _typeTable[2] = typeof(global::System.Object);
            _typeTable[3] = typeof(global::System.Boolean);
            _typeTable[4] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGrid);
            _typeTable[5] = typeof(global::Microsoft.UI.Xaml.Controls.Control);
            _typeTable[6] = typeof(global::Microsoft.UI.Xaml.Media.Brush);
            _typeTable[7] = typeof(global::Microsoft.UI.Xaml.Style);
            _typeTable[8] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridClipboardCopyMode);
            _typeTable[9] = typeof(global::System.Enum);
            _typeTable[10] = typeof(global::System.ValueType);
            _typeTable[11] = typeof(global::System.Double);
            _typeTable[12] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridLength);
            _typeTable[13] = typeof(global::System.Int32);
            _typeTable[14] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridGridLinesVisibility);
            _typeTable[15] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridHeadersVisibility);
            _typeTable[16] = typeof(global::Microsoft.UI.Xaml.Controls.ScrollBarVisibility);
            _typeTable[17] = typeof(global::Microsoft.UI.Xaml.Controls.IncrementalLoadingTrigger);
            _typeTable[18] = typeof(global::System.Collections.IEnumerable);
            _typeTable[19] = typeof(global::Microsoft.UI.Xaml.DataTemplate);
            _typeTable[20] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridRowDetailsVisibilityMode);
            _typeTable[21] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridSelectionMode);
            _typeTable[22] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn>);
            _typeTable[23] = typeof(global::System.Collections.ObjectModel.Collection<global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn>);
            _typeTable[24] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn);
            _typeTable[25] = typeof(global::Microsoft.UI.Xaml.DependencyObject);
            _typeTable[26] = typeof(global::Microsoft.UI.Xaml.Data.Binding);
            _typeTable[27] = typeof(global::System.Nullable<global::CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection>);
            _typeTable[28] = typeof(global::CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection);
            _typeTable[29] = typeof(global::Microsoft.UI.Xaml.Visibility);
            _typeTable[30] = typeof(global::System.String);
            _typeTable[31] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::Microsoft.UI.Xaml.Style>);
            _typeTable[32] = typeof(global::System.Collections.ObjectModel.Collection<global::Microsoft.UI.Xaml.Style>);
            _typeTable[33] = typeof(global::System.Collections.IList);
            _typeTable[34] = typeof(global::DeagencyWin.MainWindow);
            _typeTable[35] = typeof(global::Microsoft.UI.Xaml.Window);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_XamlControlsResources() { return new global::Microsoft.UI.Xaml.Controls.XamlControlsResources(); }
        private object Activate_4_DataGrid() { return new global::CommunityToolkit.WinUI.UI.Controls.DataGrid(); }
        private object Activate_22_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn>(); }
        private object Activate_23_Collection() { return new global::System.Collections.ObjectModel.Collection<global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn>(); }
        private object Activate_31_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::Microsoft.UI.Xaml.Style>(); }
        private object Activate_32_Collection() { return new global::System.Collections.ObjectModel.Collection<global::Microsoft.UI.Xaml.Style>(); }
        private object Activate_34_MainWindow() { return new global::DeagencyWin.MainWindow(); }
        private void MapAdd_0_XamlControlsResources(object instance, object key, object item)
        {
            var collection = (global::System.Collections.Generic.IDictionary<global::System.Object, global::System.Object>)instance;
            var newKey = (global::System.Object)key;
            var newItem = (global::System.Object)item;
            collection.Add(newKey, newItem);
        }
        private void VectorAdd_22_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn>)instance;
            var newItem = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)item;
            collection.Add(newItem);
        }
        private void VectorAdd_23_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn>)instance;
            var newItem = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)item;
            collection.Add(newItem);
        }
        private void VectorAdd_31_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Style>)instance;
            var newItem = (global::Microsoft.UI.Xaml.Style)item;
            collection.Add(newItem);
        }
        private void VectorAdd_32_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Style>)instance;
            var newItem = (global::Microsoft.UI.Xaml.Style)item;
            collection.Add(newItem);
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  Microsoft.UI.Xaml.Controls.XamlControlsResources
                userType = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.ResourceDictionary"));
                userType.Activator = Activate_0_XamlControlsResources;
                userType.DictionaryAdd = MapAdd_0_XamlControlsResources;
                userType.AddMemberName("UseCompactResources");
                xamlType = userType;
                break;

            case 1:   //  Microsoft.UI.Xaml.ResourceDictionary
                xamlType = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Object
                xamlType = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  Boolean
                xamlType = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 4:   //  CommunityToolkit.WinUI.UI.Controls.DataGrid
                userType = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_4_DataGrid;
                userType.AddMemberName("AutoGenerateColumns");
                userType.AddMemberName("AlternatingRowBackground");
                userType.AddMemberName("AlternatingRowForeground");
                userType.AddMemberName("AreRowDetailsFrozen");
                userType.AddMemberName("AreRowGroupHeadersFrozen");
                userType.AddMemberName("CanUserReorderColumns");
                userType.AddMemberName("CanUserResizeColumns");
                userType.AddMemberName("CanUserSortColumns");
                userType.AddMemberName("CellStyle");
                userType.AddMemberName("ClipboardCopyMode");
                userType.AddMemberName("ColumnHeaderHeight");
                userType.AddMemberName("ColumnHeaderStyle");
                userType.AddMemberName("ColumnWidth");
                userType.AddMemberName("DataFetchSize");
                userType.AddMemberName("DragIndicatorStyle");
                userType.AddMemberName("DropLocationIndicatorStyle");
                userType.AddMemberName("FrozenColumnCount");
                userType.AddMemberName("GridLinesVisibility");
                userType.AddMemberName("HeadersVisibility");
                userType.AddMemberName("HorizontalGridLinesBrush");
                userType.AddMemberName("HorizontalScrollBarVisibility");
                userType.AddMemberName("IsReadOnly");
                userType.AddMemberName("IsValid");
                userType.AddMemberName("IncrementalLoadingThreshold");
                userType.AddMemberName("IncrementalLoadingTrigger");
                userType.AddMemberName("ItemsSource");
                userType.AddMemberName("MaxColumnWidth");
                userType.AddMemberName("MinColumnWidth");
                userType.AddMemberName("RowBackground");
                userType.AddMemberName("RowDetailsTemplate");
                userType.AddMemberName("RowDetailsVisibilityMode");
                userType.AddMemberName("RowForeground");
                userType.AddMemberName("RowHeight");
                userType.AddMemberName("RowHeaderWidth");
                userType.AddMemberName("RowHeaderStyle");
                userType.AddMemberName("RowStyle");
                userType.AddMemberName("SelectionMode");
                userType.AddMemberName("SelectedIndex");
                userType.AddMemberName("SelectedItem");
                userType.AddMemberName("VerticalGridLinesBrush");
                userType.AddMemberName("VerticalScrollBarVisibility");
                userType.AddMemberName("Columns");
                userType.AddMemberName("CurrentColumn");
                userType.AddMemberName("RowGroupHeaderPropertyNameAlternative");
                userType.AddMemberName("RowGroupHeaderStyles");
                userType.AddMemberName("SelectedItems");
                xamlType = userType;
                break;

            case 5:   //  Microsoft.UI.Xaml.Controls.Control
                xamlType = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 6:   //  Microsoft.UI.Xaml.Media.Brush
                xamlType = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 7:   //  Microsoft.UI.Xaml.Style
                xamlType = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 8:   //  CommunityToolkit.WinUI.UI.Controls.DataGridClipboardCopyMode
                userType = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::CommunityToolkit.WinUI.UI.Controls.DataGridClipboardCopyMode.None);
                userType.AddEnumValue("ExcludeHeader", global::CommunityToolkit.WinUI.UI.Controls.DataGridClipboardCopyMode.ExcludeHeader);
                userType.AddEnumValue("IncludeHeader", global::CommunityToolkit.WinUI.UI.Controls.DataGridClipboardCopyMode.IncludeHeader);
                xamlType = userType;
                break;

            case 9:   //  System.Enum
                userType = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 10:   //  System.ValueType
                userType = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 11:   //  Double
                xamlType = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 12:   //  CommunityToolkit.WinUI.UI.Controls.DataGridLength
                userType = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.CreateFromStringMethod = x => (global::System.Object)global::CommunityToolkit.WinUI.UI.Controls.DataGridLength.ConvertFromString(x);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 13:   //  Int32
                xamlType = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 14:   //  CommunityToolkit.WinUI.UI.Controls.DataGridGridLinesVisibility
                userType = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::CommunityToolkit.WinUI.UI.Controls.DataGridGridLinesVisibility.None);
                userType.AddEnumValue("Horizontal", global::CommunityToolkit.WinUI.UI.Controls.DataGridGridLinesVisibility.Horizontal);
                userType.AddEnumValue("Vertical", global::CommunityToolkit.WinUI.UI.Controls.DataGridGridLinesVisibility.Vertical);
                userType.AddEnumValue("All", global::CommunityToolkit.WinUI.UI.Controls.DataGridGridLinesVisibility.All);
                xamlType = userType;
                break;

            case 15:   //  CommunityToolkit.WinUI.UI.Controls.DataGridHeadersVisibility
                userType = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("None", global::CommunityToolkit.WinUI.UI.Controls.DataGridHeadersVisibility.None);
                userType.AddEnumValue("Column", global::CommunityToolkit.WinUI.UI.Controls.DataGridHeadersVisibility.Column);
                userType.AddEnumValue("Row", global::CommunityToolkit.WinUI.UI.Controls.DataGridHeadersVisibility.Row);
                userType.AddEnumValue("All", global::CommunityToolkit.WinUI.UI.Controls.DataGridHeadersVisibility.All);
                xamlType = userType;
                break;

            case 16:   //  Microsoft.UI.Xaml.Controls.ScrollBarVisibility
                xamlType = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 17:   //  Microsoft.UI.Xaml.Controls.IncrementalLoadingTrigger
                xamlType = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 18:   //  System.Collections.IEnumerable
                userType = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 19:   //  Microsoft.UI.Xaml.DataTemplate
                xamlType = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 20:   //  CommunityToolkit.WinUI.UI.Controls.DataGridRowDetailsVisibilityMode
                userType = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("VisibleWhenSelected", global::CommunityToolkit.WinUI.UI.Controls.DataGridRowDetailsVisibilityMode.VisibleWhenSelected);
                userType.AddEnumValue("Visible", global::CommunityToolkit.WinUI.UI.Controls.DataGridRowDetailsVisibilityMode.Visible);
                userType.AddEnumValue("Collapsed", global::CommunityToolkit.WinUI.UI.Controls.DataGridRowDetailsVisibilityMode.Collapsed);
                xamlType = userType;
                break;

            case 21:   //  CommunityToolkit.WinUI.UI.Controls.DataGridSelectionMode
                userType = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Extended", global::CommunityToolkit.WinUI.UI.Controls.DataGridSelectionMode.Extended);
                userType.AddEnumValue("Single", global::CommunityToolkit.WinUI.UI.Controls.DataGridSelectionMode.Single);
                xamlType = userType;
                break;

            case 22:   //  System.Collections.ObjectModel.ObservableCollection`1<CommunityToolkit.WinUI.UI.Controls.DataGridColumn>
                userType = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<CommunityToolkit.WinUI.UI.Controls.DataGridColumn>"));
                userType.CollectionAdd = VectorAdd_22_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 23:   //  System.Collections.ObjectModel.Collection`1<CommunityToolkit.WinUI.UI.Controls.DataGridColumn>
                userType = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_23_Collection;
                userType.CollectionAdd = VectorAdd_23_Collection;
                xamlType = userType;
                break;

            case 24:   //  CommunityToolkit.WinUI.UI.Controls.DataGridColumn
                userType = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.DependencyObject"));
                userType.AddMemberName("ActualWidth");
                userType.AddMemberName("CanUserReorder");
                userType.AddMemberName("CanUserResize");
                userType.AddMemberName("CanUserSort");
                userType.AddMemberName("CellStyle");
                userType.AddMemberName("ClipboardContentBinding");
                userType.AddMemberName("DisplayIndex");
                userType.AddMemberName("DragIndicatorStyle");
                userType.AddMemberName("HeaderStyle");
                userType.AddMemberName("Header");
                userType.AddMemberName("IsAutoGenerated");
                userType.AddMemberName("IsFrozen");
                userType.AddMemberName("IsReadOnly");
                userType.AddMemberName("MaxWidth");
                userType.AddMemberName("MinWidth");
                userType.AddMemberName("SortDirection");
                userType.AddMemberName("Tag");
                userType.AddMemberName("Visibility");
                userType.AddMemberName("Width");
                xamlType = userType;
                break;

            case 25:   //  Microsoft.UI.Xaml.DependencyObject
                xamlType = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 26:   //  Microsoft.UI.Xaml.Data.Binding
                xamlType = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 27:   //  System.Nullable`1<CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection>
                userType = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetBoxedType(GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection"));
                userType.BoxInstance = userType.BoxType<global::CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection>;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 28:   //  CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection
                userType = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Ascending", global::CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection.Ascending);
                userType.AddEnumValue("Descending", global::CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection.Descending);
                xamlType = userType;
                break;

            case 29:   //  Microsoft.UI.Xaml.Visibility
                xamlType = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 30:   //  String
                xamlType = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 31:   //  System.Collections.ObjectModel.ObservableCollection`1<Microsoft.UI.Xaml.Style>
                userType = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<Microsoft.UI.Xaml.Style>"));
                userType.CollectionAdd = VectorAdd_31_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 32:   //  System.Collections.ObjectModel.Collection`1<Microsoft.UI.Xaml.Style>
                userType = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_32_Collection;
                userType.CollectionAdd = VectorAdd_32_Collection;
                xamlType = userType;
                break;

            case 33:   //  System.Collections.IList
                userType = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 34:   //  DeagencyWin.MainWindow
                userType = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.UI.Xaml.Window"));
                userType.Activator = Activate_34_MainWindow;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 35:   //  Microsoft.UI.Xaml.Window
                xamlType = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    var otherProviders = new global::System.Collections.Generic.List<global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::CommunityToolkit.WinUI.UI.Controls.CommunityToolkit_WinUI_UI_Controls_Core_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::CommunityToolkit.WinUI.UI.Controls.CommunityToolkit_WinUI_UI_Controls_DataGrid_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::CommunityToolkit.WinUI.UI.Controls.CommunityToolkit_WinUI_UI_Controls_Input_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::CommunityToolkit.WinUI.UI.Controls.CommunityToolkit_WinUI_UI_Controls_Layout_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::CommunityToolkit.WinUI.UI.Controls.CommunityToolkit_WinUI_UI_Controls_Markdown_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::CommunityToolkit.WinUI.UI.Controls.CommunityToolkit_WinUI_UI_Controls_Media_XamlTypeInfo.XamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider() as global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    _otherProviders = otherProviders;
                }
                return _otherProviders;
            }
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Microsoft.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Microsoft.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Microsoft.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Microsoft.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_XamlControlsResources_UseCompactResources(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.XamlControlsResources)instance;
            return that.UseCompactResources;
        }
        private void set_0_XamlControlsResources_UseCompactResources(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.XamlControlsResources)instance;
            that.UseCompactResources = (global::System.Boolean)Value;
        }
        private object get_1_DataGrid_AutoGenerateColumns(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.AutoGenerateColumns;
        }
        private void set_1_DataGrid_AutoGenerateColumns(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.AutoGenerateColumns = (global::System.Boolean)Value;
        }
        private object get_2_DataGrid_AlternatingRowBackground(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.AlternatingRowBackground;
        }
        private void set_2_DataGrid_AlternatingRowBackground(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.AlternatingRowBackground = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_3_DataGrid_AlternatingRowForeground(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.AlternatingRowForeground;
        }
        private void set_3_DataGrid_AlternatingRowForeground(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.AlternatingRowForeground = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_4_DataGrid_AreRowDetailsFrozen(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.AreRowDetailsFrozen;
        }
        private void set_4_DataGrid_AreRowDetailsFrozen(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.AreRowDetailsFrozen = (global::System.Boolean)Value;
        }
        private object get_5_DataGrid_AreRowGroupHeadersFrozen(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.AreRowGroupHeadersFrozen;
        }
        private void set_5_DataGrid_AreRowGroupHeadersFrozen(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.AreRowGroupHeadersFrozen = (global::System.Boolean)Value;
        }
        private object get_6_DataGrid_CanUserReorderColumns(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.CanUserReorderColumns;
        }
        private void set_6_DataGrid_CanUserReorderColumns(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.CanUserReorderColumns = (global::System.Boolean)Value;
        }
        private object get_7_DataGrid_CanUserResizeColumns(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.CanUserResizeColumns;
        }
        private void set_7_DataGrid_CanUserResizeColumns(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.CanUserResizeColumns = (global::System.Boolean)Value;
        }
        private object get_8_DataGrid_CanUserSortColumns(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.CanUserSortColumns;
        }
        private void set_8_DataGrid_CanUserSortColumns(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.CanUserSortColumns = (global::System.Boolean)Value;
        }
        private object get_9_DataGrid_CellStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.CellStyle;
        }
        private void set_9_DataGrid_CellStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.CellStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_10_DataGrid_ClipboardCopyMode(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.ClipboardCopyMode;
        }
        private void set_10_DataGrid_ClipboardCopyMode(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.ClipboardCopyMode = (global::CommunityToolkit.WinUI.UI.Controls.DataGridClipboardCopyMode)Value;
        }
        private object get_11_DataGrid_ColumnHeaderHeight(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.ColumnHeaderHeight;
        }
        private void set_11_DataGrid_ColumnHeaderHeight(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.ColumnHeaderHeight = (global::System.Double)Value;
        }
        private object get_12_DataGrid_ColumnHeaderStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.ColumnHeaderStyle;
        }
        private void set_12_DataGrid_ColumnHeaderStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.ColumnHeaderStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_13_DataGrid_ColumnWidth(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.ColumnWidth;
        }
        private void set_13_DataGrid_ColumnWidth(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.ColumnWidth = (global::CommunityToolkit.WinUI.UI.Controls.DataGridLength)Value;
        }
        private object get_14_DataGrid_DataFetchSize(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.DataFetchSize;
        }
        private void set_14_DataGrid_DataFetchSize(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.DataFetchSize = (global::System.Double)Value;
        }
        private object get_15_DataGrid_DragIndicatorStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.DragIndicatorStyle;
        }
        private void set_15_DataGrid_DragIndicatorStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.DragIndicatorStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_16_DataGrid_DropLocationIndicatorStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.DropLocationIndicatorStyle;
        }
        private void set_16_DataGrid_DropLocationIndicatorStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.DropLocationIndicatorStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_17_DataGrid_FrozenColumnCount(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.FrozenColumnCount;
        }
        private void set_17_DataGrid_FrozenColumnCount(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.FrozenColumnCount = (global::System.Int32)Value;
        }
        private object get_18_DataGrid_GridLinesVisibility(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.GridLinesVisibility;
        }
        private void set_18_DataGrid_GridLinesVisibility(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.GridLinesVisibility = (global::CommunityToolkit.WinUI.UI.Controls.DataGridGridLinesVisibility)Value;
        }
        private object get_19_DataGrid_HeadersVisibility(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.HeadersVisibility;
        }
        private void set_19_DataGrid_HeadersVisibility(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.HeadersVisibility = (global::CommunityToolkit.WinUI.UI.Controls.DataGridHeadersVisibility)Value;
        }
        private object get_20_DataGrid_HorizontalGridLinesBrush(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.HorizontalGridLinesBrush;
        }
        private void set_20_DataGrid_HorizontalGridLinesBrush(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.HorizontalGridLinesBrush = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_21_DataGrid_HorizontalScrollBarVisibility(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.HorizontalScrollBarVisibility;
        }
        private void set_21_DataGrid_HorizontalScrollBarVisibility(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.HorizontalScrollBarVisibility = (global::Microsoft.UI.Xaml.Controls.ScrollBarVisibility)Value;
        }
        private object get_22_DataGrid_IsReadOnly(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.IsReadOnly;
        }
        private void set_22_DataGrid_IsReadOnly(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.IsReadOnly = (global::System.Boolean)Value;
        }
        private object get_23_DataGrid_IsValid(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.IsValid;
        }
        private object get_24_DataGrid_IncrementalLoadingThreshold(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.IncrementalLoadingThreshold;
        }
        private void set_24_DataGrid_IncrementalLoadingThreshold(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.IncrementalLoadingThreshold = (global::System.Double)Value;
        }
        private object get_25_DataGrid_IncrementalLoadingTrigger(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.IncrementalLoadingTrigger;
        }
        private void set_25_DataGrid_IncrementalLoadingTrigger(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.IncrementalLoadingTrigger = (global::Microsoft.UI.Xaml.Controls.IncrementalLoadingTrigger)Value;
        }
        private object get_26_DataGrid_ItemsSource(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.ItemsSource;
        }
        private void set_26_DataGrid_ItemsSource(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.ItemsSource = (global::System.Collections.IEnumerable)Value;
        }
        private object get_27_DataGrid_MaxColumnWidth(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.MaxColumnWidth;
        }
        private void set_27_DataGrid_MaxColumnWidth(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.MaxColumnWidth = (global::System.Double)Value;
        }
        private object get_28_DataGrid_MinColumnWidth(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.MinColumnWidth;
        }
        private void set_28_DataGrid_MinColumnWidth(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.MinColumnWidth = (global::System.Double)Value;
        }
        private object get_29_DataGrid_RowBackground(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.RowBackground;
        }
        private void set_29_DataGrid_RowBackground(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.RowBackground = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_30_DataGrid_RowDetailsTemplate(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.RowDetailsTemplate;
        }
        private void set_30_DataGrid_RowDetailsTemplate(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.RowDetailsTemplate = (global::Microsoft.UI.Xaml.DataTemplate)Value;
        }
        private object get_31_DataGrid_RowDetailsVisibilityMode(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.RowDetailsVisibilityMode;
        }
        private void set_31_DataGrid_RowDetailsVisibilityMode(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.RowDetailsVisibilityMode = (global::CommunityToolkit.WinUI.UI.Controls.DataGridRowDetailsVisibilityMode)Value;
        }
        private object get_32_DataGrid_RowForeground(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.RowForeground;
        }
        private void set_32_DataGrid_RowForeground(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.RowForeground = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_33_DataGrid_RowHeight(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.RowHeight;
        }
        private void set_33_DataGrid_RowHeight(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.RowHeight = (global::System.Double)Value;
        }
        private object get_34_DataGrid_RowHeaderWidth(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.RowHeaderWidth;
        }
        private void set_34_DataGrid_RowHeaderWidth(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.RowHeaderWidth = (global::System.Double)Value;
        }
        private object get_35_DataGrid_RowHeaderStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.RowHeaderStyle;
        }
        private void set_35_DataGrid_RowHeaderStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.RowHeaderStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_36_DataGrid_RowStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.RowStyle;
        }
        private void set_36_DataGrid_RowStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.RowStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_37_DataGrid_SelectionMode(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.SelectionMode;
        }
        private void set_37_DataGrid_SelectionMode(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.SelectionMode = (global::CommunityToolkit.WinUI.UI.Controls.DataGridSelectionMode)Value;
        }
        private object get_38_DataGrid_SelectedIndex(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.SelectedIndex;
        }
        private void set_38_DataGrid_SelectedIndex(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.SelectedIndex = (global::System.Int32)Value;
        }
        private object get_39_DataGrid_SelectedItem(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.SelectedItem;
        }
        private void set_39_DataGrid_SelectedItem(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.SelectedItem = (global::System.Object)Value;
        }
        private object get_40_DataGrid_VerticalGridLinesBrush(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.VerticalGridLinesBrush;
        }
        private void set_40_DataGrid_VerticalGridLinesBrush(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.VerticalGridLinesBrush = (global::Microsoft.UI.Xaml.Media.Brush)Value;
        }
        private object get_41_DataGrid_VerticalScrollBarVisibility(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.VerticalScrollBarVisibility;
        }
        private void set_41_DataGrid_VerticalScrollBarVisibility(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.VerticalScrollBarVisibility = (global::Microsoft.UI.Xaml.Controls.ScrollBarVisibility)Value;
        }
        private object get_42_DataGrid_Columns(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.Columns;
        }
        private object get_43_DataGridColumn_ActualWidth(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.ActualWidth;
        }
        private object get_44_DataGridColumn_CanUserReorder(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.CanUserReorder;
        }
        private void set_44_DataGridColumn_CanUserReorder(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.CanUserReorder = (global::System.Boolean)Value;
        }
        private object get_45_DataGridColumn_CanUserResize(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.CanUserResize;
        }
        private void set_45_DataGridColumn_CanUserResize(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.CanUserResize = (global::System.Boolean)Value;
        }
        private object get_46_DataGridColumn_CanUserSort(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.CanUserSort;
        }
        private void set_46_DataGridColumn_CanUserSort(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.CanUserSort = (global::System.Boolean)Value;
        }
        private object get_47_DataGridColumn_CellStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.CellStyle;
        }
        private void set_47_DataGridColumn_CellStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.CellStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_48_DataGridColumn_ClipboardContentBinding(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.ClipboardContentBinding;
        }
        private void set_48_DataGridColumn_ClipboardContentBinding(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.ClipboardContentBinding = (global::Microsoft.UI.Xaml.Data.Binding)Value;
        }
        private object get_49_DataGridColumn_DisplayIndex(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.DisplayIndex;
        }
        private void set_49_DataGridColumn_DisplayIndex(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.DisplayIndex = (global::System.Int32)Value;
        }
        private object get_50_DataGridColumn_DragIndicatorStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.DragIndicatorStyle;
        }
        private void set_50_DataGridColumn_DragIndicatorStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.DragIndicatorStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_51_DataGridColumn_HeaderStyle(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.HeaderStyle;
        }
        private void set_51_DataGridColumn_HeaderStyle(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.HeaderStyle = (global::Microsoft.UI.Xaml.Style)Value;
        }
        private object get_52_DataGridColumn_Header(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.Header;
        }
        private void set_52_DataGridColumn_Header(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.Header = (global::System.Object)Value;
        }
        private object get_53_DataGridColumn_IsAutoGenerated(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.IsAutoGenerated;
        }
        private object get_54_DataGridColumn_IsFrozen(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.IsFrozen;
        }
        private object get_55_DataGridColumn_IsReadOnly(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.IsReadOnly;
        }
        private void set_55_DataGridColumn_IsReadOnly(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.IsReadOnly = (global::System.Boolean)Value;
        }
        private object get_56_DataGridColumn_MaxWidth(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.MaxWidth;
        }
        private void set_56_DataGridColumn_MaxWidth(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.MaxWidth = (global::System.Double)Value;
        }
        private object get_57_DataGridColumn_MinWidth(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.MinWidth;
        }
        private void set_57_DataGridColumn_MinWidth(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.MinWidth = (global::System.Double)Value;
        }
        private object get_58_DataGridColumn_SortDirection(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.SortDirection;
        }
        private void set_58_DataGridColumn_SortDirection(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.SortDirection = (global::System.Nullable<global::CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection>)Value;
        }
        private object get_59_DataGridColumn_Tag(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.Tag;
        }
        private void set_59_DataGridColumn_Tag(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.Tag = (global::System.Object)Value;
        }
        private object get_60_DataGridColumn_Visibility(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.Visibility;
        }
        private void set_60_DataGridColumn_Visibility(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.Visibility = (global::Microsoft.UI.Xaml.Visibility)Value;
        }
        private object get_61_DataGridColumn_Width(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            return that.Width;
        }
        private void set_61_DataGridColumn_Width(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)instance;
            that.Width = (global::CommunityToolkit.WinUI.UI.Controls.DataGridLength)Value;
        }
        private object get_62_DataGrid_CurrentColumn(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.CurrentColumn;
        }
        private void set_62_DataGrid_CurrentColumn(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.CurrentColumn = (global::CommunityToolkit.WinUI.UI.Controls.DataGridColumn)Value;
        }
        private object get_63_DataGrid_RowGroupHeaderPropertyNameAlternative(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.RowGroupHeaderPropertyNameAlternative;
        }
        private void set_63_DataGrid_RowGroupHeaderPropertyNameAlternative(object instance, object Value)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            that.RowGroupHeaderPropertyNameAlternative = (global::System.String)Value;
        }
        private object get_64_DataGrid_RowGroupHeaderStyles(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.RowGroupHeaderStyles;
        }
        private object get_65_DataGrid_SelectedItems(object instance)
        {
            var that = (global::CommunityToolkit.WinUI.UI.Controls.DataGrid)instance;
            return that.SelectedItems;
        }

        private global::Microsoft.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember xamlMember = null;
            global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Microsoft.UI.Xaml.Controls.XamlControlsResources.UseCompactResources":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.XamlControlsResources");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "UseCompactResources", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_0_XamlControlsResources_UseCompactResources;
                xamlMember.Setter = set_0_XamlControlsResources_UseCompactResources;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.AutoGenerateColumns":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "AutoGenerateColumns", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_1_DataGrid_AutoGenerateColumns;
                xamlMember.Setter = set_1_DataGrid_AutoGenerateColumns;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.AlternatingRowBackground":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "AlternatingRowBackground", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_2_DataGrid_AlternatingRowBackground;
                xamlMember.Setter = set_2_DataGrid_AlternatingRowBackground;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.AlternatingRowForeground":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "AlternatingRowForeground", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_3_DataGrid_AlternatingRowForeground;
                xamlMember.Setter = set_3_DataGrid_AlternatingRowForeground;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.AreRowDetailsFrozen":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "AreRowDetailsFrozen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_4_DataGrid_AreRowDetailsFrozen;
                xamlMember.Setter = set_4_DataGrid_AreRowDetailsFrozen;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.AreRowGroupHeadersFrozen":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "AreRowGroupHeadersFrozen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_5_DataGrid_AreRowGroupHeadersFrozen;
                xamlMember.Setter = set_5_DataGrid_AreRowGroupHeadersFrozen;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.CanUserReorderColumns":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "CanUserReorderColumns", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_6_DataGrid_CanUserReorderColumns;
                xamlMember.Setter = set_6_DataGrid_CanUserReorderColumns;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.CanUserResizeColumns":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "CanUserResizeColumns", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_7_DataGrid_CanUserResizeColumns;
                xamlMember.Setter = set_7_DataGrid_CanUserResizeColumns;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.CanUserSortColumns":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "CanUserSortColumns", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_8_DataGrid_CanUserSortColumns;
                xamlMember.Setter = set_8_DataGrid_CanUserSortColumns;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.CellStyle":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "CellStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_9_DataGrid_CellStyle;
                xamlMember.Setter = set_9_DataGrid_CellStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.ClipboardCopyMode":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "ClipboardCopyMode", "CommunityToolkit.WinUI.UI.Controls.DataGridClipboardCopyMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_10_DataGrid_ClipboardCopyMode;
                xamlMember.Setter = set_10_DataGrid_ClipboardCopyMode;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.ColumnHeaderHeight":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "ColumnHeaderHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_11_DataGrid_ColumnHeaderHeight;
                xamlMember.Setter = set_11_DataGrid_ColumnHeaderHeight;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.ColumnHeaderStyle":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "ColumnHeaderStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_12_DataGrid_ColumnHeaderStyle;
                xamlMember.Setter = set_12_DataGrid_ColumnHeaderStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.ColumnWidth":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "ColumnWidth", "CommunityToolkit.WinUI.UI.Controls.DataGridLength");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_13_DataGrid_ColumnWidth;
                xamlMember.Setter = set_13_DataGrid_ColumnWidth;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.DataFetchSize":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "DataFetchSize", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_14_DataGrid_DataFetchSize;
                xamlMember.Setter = set_14_DataGrid_DataFetchSize;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.DragIndicatorStyle":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "DragIndicatorStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_15_DataGrid_DragIndicatorStyle;
                xamlMember.Setter = set_15_DataGrid_DragIndicatorStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.DropLocationIndicatorStyle":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "DropLocationIndicatorStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_16_DataGrid_DropLocationIndicatorStyle;
                xamlMember.Setter = set_16_DataGrid_DropLocationIndicatorStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.FrozenColumnCount":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "FrozenColumnCount", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_17_DataGrid_FrozenColumnCount;
                xamlMember.Setter = set_17_DataGrid_FrozenColumnCount;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.GridLinesVisibility":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "GridLinesVisibility", "CommunityToolkit.WinUI.UI.Controls.DataGridGridLinesVisibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_18_DataGrid_GridLinesVisibility;
                xamlMember.Setter = set_18_DataGrid_GridLinesVisibility;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.HeadersVisibility":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "HeadersVisibility", "CommunityToolkit.WinUI.UI.Controls.DataGridHeadersVisibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_19_DataGrid_HeadersVisibility;
                xamlMember.Setter = set_19_DataGrid_HeadersVisibility;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.HorizontalGridLinesBrush":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "HorizontalGridLinesBrush", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_20_DataGrid_HorizontalGridLinesBrush;
                xamlMember.Setter = set_20_DataGrid_HorizontalGridLinesBrush;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.HorizontalScrollBarVisibility":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "HorizontalScrollBarVisibility", "Microsoft.UI.Xaml.Controls.ScrollBarVisibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_21_DataGrid_HorizontalScrollBarVisibility;
                xamlMember.Setter = set_21_DataGrid_HorizontalScrollBarVisibility;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.IsReadOnly":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "IsReadOnly", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_22_DataGrid_IsReadOnly;
                xamlMember.Setter = set_22_DataGrid_IsReadOnly;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.IsValid":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "IsValid", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_23_DataGrid_IsValid;
                xamlMember.SetIsReadOnly();
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.IncrementalLoadingThreshold":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "IncrementalLoadingThreshold", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_24_DataGrid_IncrementalLoadingThreshold;
                xamlMember.Setter = set_24_DataGrid_IncrementalLoadingThreshold;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.IncrementalLoadingTrigger":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "IncrementalLoadingTrigger", "Microsoft.UI.Xaml.Controls.IncrementalLoadingTrigger");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_25_DataGrid_IncrementalLoadingTrigger;
                xamlMember.Setter = set_25_DataGrid_IncrementalLoadingTrigger;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.ItemsSource":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "ItemsSource", "System.Collections.IEnumerable");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_26_DataGrid_ItemsSource;
                xamlMember.Setter = set_26_DataGrid_ItemsSource;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.MaxColumnWidth":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "MaxColumnWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_27_DataGrid_MaxColumnWidth;
                xamlMember.Setter = set_27_DataGrid_MaxColumnWidth;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.MinColumnWidth":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "MinColumnWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_28_DataGrid_MinColumnWidth;
                xamlMember.Setter = set_28_DataGrid_MinColumnWidth;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.RowBackground":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "RowBackground", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_29_DataGrid_RowBackground;
                xamlMember.Setter = set_29_DataGrid_RowBackground;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.RowDetailsTemplate":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "RowDetailsTemplate", "Microsoft.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_30_DataGrid_RowDetailsTemplate;
                xamlMember.Setter = set_30_DataGrid_RowDetailsTemplate;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.RowDetailsVisibilityMode":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "RowDetailsVisibilityMode", "CommunityToolkit.WinUI.UI.Controls.DataGridRowDetailsVisibilityMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_31_DataGrid_RowDetailsVisibilityMode;
                xamlMember.Setter = set_31_DataGrid_RowDetailsVisibilityMode;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.RowForeground":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "RowForeground", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_32_DataGrid_RowForeground;
                xamlMember.Setter = set_32_DataGrid_RowForeground;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.RowHeight":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "RowHeight", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_33_DataGrid_RowHeight;
                xamlMember.Setter = set_33_DataGrid_RowHeight;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.RowHeaderWidth":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "RowHeaderWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_34_DataGrid_RowHeaderWidth;
                xamlMember.Setter = set_34_DataGrid_RowHeaderWidth;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.RowHeaderStyle":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "RowHeaderStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_35_DataGrid_RowHeaderStyle;
                xamlMember.Setter = set_35_DataGrid_RowHeaderStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.RowStyle":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "RowStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_36_DataGrid_RowStyle;
                xamlMember.Setter = set_36_DataGrid_RowStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.SelectionMode":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "SelectionMode", "CommunityToolkit.WinUI.UI.Controls.DataGridSelectionMode");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_37_DataGrid_SelectionMode;
                xamlMember.Setter = set_37_DataGrid_SelectionMode;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.SelectedIndex":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "SelectedIndex", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_38_DataGrid_SelectedIndex;
                xamlMember.Setter = set_38_DataGrid_SelectedIndex;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.SelectedItem":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "SelectedItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_39_DataGrid_SelectedItem;
                xamlMember.Setter = set_39_DataGrid_SelectedItem;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.VerticalGridLinesBrush":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "VerticalGridLinesBrush", "Microsoft.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_40_DataGrid_VerticalGridLinesBrush;
                xamlMember.Setter = set_40_DataGrid_VerticalGridLinesBrush;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.VerticalScrollBarVisibility":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "VerticalScrollBarVisibility", "Microsoft.UI.Xaml.Controls.ScrollBarVisibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_41_DataGrid_VerticalScrollBarVisibility;
                xamlMember.Setter = set_41_DataGrid_VerticalScrollBarVisibility;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.Columns":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "Columns", "System.Collections.ObjectModel.ObservableCollection`1<CommunityToolkit.WinUI.UI.Controls.DataGridColumn>");
                xamlMember.Getter = get_42_DataGrid_Columns;
                xamlMember.SetIsReadOnly();
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.ActualWidth":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "ActualWidth", "Double");
                xamlMember.Getter = get_43_DataGridColumn_ActualWidth;
                xamlMember.SetIsReadOnly();
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.CanUserReorder":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "CanUserReorder", "Boolean");
                xamlMember.Getter = get_44_DataGridColumn_CanUserReorder;
                xamlMember.Setter = set_44_DataGridColumn_CanUserReorder;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.CanUserResize":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "CanUserResize", "Boolean");
                xamlMember.Getter = get_45_DataGridColumn_CanUserResize;
                xamlMember.Setter = set_45_DataGridColumn_CanUserResize;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.CanUserSort":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "CanUserSort", "Boolean");
                xamlMember.Getter = get_46_DataGridColumn_CanUserSort;
                xamlMember.Setter = set_46_DataGridColumn_CanUserSort;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.CellStyle":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "CellStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.Getter = get_47_DataGridColumn_CellStyle;
                xamlMember.Setter = set_47_DataGridColumn_CellStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.ClipboardContentBinding":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "ClipboardContentBinding", "Microsoft.UI.Xaml.Data.Binding");
                xamlMember.Getter = get_48_DataGridColumn_ClipboardContentBinding;
                xamlMember.Setter = set_48_DataGridColumn_ClipboardContentBinding;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.DisplayIndex":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "DisplayIndex", "Int32");
                xamlMember.Getter = get_49_DataGridColumn_DisplayIndex;
                xamlMember.Setter = set_49_DataGridColumn_DisplayIndex;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.DragIndicatorStyle":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "DragIndicatorStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.Getter = get_50_DataGridColumn_DragIndicatorStyle;
                xamlMember.Setter = set_50_DataGridColumn_DragIndicatorStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.HeaderStyle":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "HeaderStyle", "Microsoft.UI.Xaml.Style");
                xamlMember.Getter = get_51_DataGridColumn_HeaderStyle;
                xamlMember.Setter = set_51_DataGridColumn_HeaderStyle;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.Header":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "Header", "Object");
                xamlMember.Getter = get_52_DataGridColumn_Header;
                xamlMember.Setter = set_52_DataGridColumn_Header;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.IsAutoGenerated":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "IsAutoGenerated", "Boolean");
                xamlMember.Getter = get_53_DataGridColumn_IsAutoGenerated;
                xamlMember.SetIsReadOnly();
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.IsFrozen":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "IsFrozen", "Boolean");
                xamlMember.Getter = get_54_DataGridColumn_IsFrozen;
                xamlMember.SetIsReadOnly();
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.IsReadOnly":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "IsReadOnly", "Boolean");
                xamlMember.Getter = get_55_DataGridColumn_IsReadOnly;
                xamlMember.Setter = set_55_DataGridColumn_IsReadOnly;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.MaxWidth":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "MaxWidth", "Double");
                xamlMember.Getter = get_56_DataGridColumn_MaxWidth;
                xamlMember.Setter = set_56_DataGridColumn_MaxWidth;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.MinWidth":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "MinWidth", "Double");
                xamlMember.Getter = get_57_DataGridColumn_MinWidth;
                xamlMember.Setter = set_57_DataGridColumn_MinWidth;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.SortDirection":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "SortDirection", "System.Nullable`1<CommunityToolkit.WinUI.UI.Controls.DataGridSortDirection>");
                xamlMember.Getter = get_58_DataGridColumn_SortDirection;
                xamlMember.Setter = set_58_DataGridColumn_SortDirection;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.Tag":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "Tag", "Object");
                xamlMember.Getter = get_59_DataGridColumn_Tag;
                xamlMember.Setter = set_59_DataGridColumn_Tag;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.Visibility":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "Visibility", "Microsoft.UI.Xaml.Visibility");
                xamlMember.Getter = get_60_DataGridColumn_Visibility;
                xamlMember.Setter = set_60_DataGridColumn_Visibility;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGridColumn.Width":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "Width", "CommunityToolkit.WinUI.UI.Controls.DataGridLength");
                xamlMember.Getter = get_61_DataGridColumn_Width;
                xamlMember.Setter = set_61_DataGridColumn_Width;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.CurrentColumn":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "CurrentColumn", "CommunityToolkit.WinUI.UI.Controls.DataGridColumn");
                xamlMember.Getter = get_62_DataGrid_CurrentColumn;
                xamlMember.Setter = set_62_DataGrid_CurrentColumn;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.RowGroupHeaderPropertyNameAlternative":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "RowGroupHeaderPropertyNameAlternative", "String");
                xamlMember.Getter = get_63_DataGrid_RowGroupHeaderPropertyNameAlternative;
                xamlMember.Setter = set_63_DataGrid_RowGroupHeaderPropertyNameAlternative;
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.RowGroupHeaderStyles":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "RowGroupHeaderStyles", "System.Collections.ObjectModel.ObservableCollection`1<Microsoft.UI.Xaml.Style>");
                xamlMember.Getter = get_64_DataGrid_RowGroupHeaderStyles;
                xamlMember.SetIsReadOnly();
                break;
            case "CommunityToolkit.WinUI.UI.Controls.DataGrid.SelectedItems":
                userType = (global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommunityToolkit.WinUI.UI.Controls.DataGrid");
                xamlMember = new global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlMember(this, "SelectedItems", "System.Collections.IList");
                xamlMember.Getter = get_65_DataGrid_SelectedItems;
                xamlMember.SetIsReadOnly();
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Microsoft.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Microsoft.UI.Xaml.Markup.IXamlType BoxedType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);
    internal delegate object CreateFromStringMethod(string args);
    internal delegate object BoxInstanceMethod(object instance);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlSystemBaseType
        , global::Microsoft.UI.Xaml.Markup.IXamlType
    {
        global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Microsoft.UI.Xaml.Markup.IXamlType _baseType;
        global::Microsoft.UI.Xaml.Markup.IXamlType _boxedType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Microsoft.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Microsoft.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }
        override public global::Microsoft.UI.Xaml.Markup.IXamlType BoxedType { get { return _boxedType; } }

        override public global::Microsoft.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Microsoft.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (BoxedType != null)
            {
                return BoxInstance(BoxedType.CreateFromString(input));
            }

            if (CreateFromStringMethod != null)
            {
                return this.CreateFromStringMethod(input);
            }
            else if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }
        public CreateFromStringMethod CreateFromStringMethod {get; set; }
        public BoxInstanceMethod BoxInstance {get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void SetBoxedType(global::Microsoft.UI.Xaml.Markup.IXamlType boxedType)
        {
            _boxedType = boxedType;
        }

        public object BoxType<T>(object instance) where T: struct
        {
            T unwrapped = (T)instance;
            return new global::System.Nullable<T>(unwrapped);
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 1.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Microsoft.UI.Xaml.Markup.IXamlMember
    {
        global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::DeagencyWin.DeagencyWin_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Microsoft.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Microsoft.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

